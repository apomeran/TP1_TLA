P = {

S -> VOLUME{NAME}=VOLUME_VALUEJUMP | NOTE{NAME}=NOTE_VALUEJUMP | DURATION{NAME}=DURATION_VALUEJUMP | FREQUENCY{NAME}=FREQUENCY_VALUEJUMP | FUNCJUMP | STREAM{NAME}=STREAM_DATAJUMP | lambda

JUMP -> salto_de_lineaS | lambda

NAME -> LETTER1LETTER2
LETTER1 -> _ | a | b | ... | z | A | B | ... | Z
LETTER2 -> LETTER1LETTER2 | NUMBER09LETTER2 | lambda

VOLUME_VALUE -> VNUMBER01
NUMBER01 -> 0 | 1

NOTE_VALUE -> REGULAR_NOTE_VALUE#OCTAVE | REGULAR_NOTE_VALUEOCTAVE | IRREGULAR_NOTE_VALUEOCTAVE
REGULAR_NOTE_VALUE -> A | C | D | F | G
IRREGULAR_NOTE_VALUE -> B | E

DURATION_VALUE -> TNUMBERDURATION
NUMBERDURATION -> NUMBER0 | NUMBERNUMBER09 | NUMBERNUMBER09
NUMBER -> NUMBER14 | 5 | 6 | 7 | 8 | 9
NUMBER09 -> 0 | NUMBER

FREQUENCY_VALUE -> NUMBER09DECIMAL | NNUMBER09DECIMAL | NNUMBER09NUMBER09DECIMAL | NUMBER14NUMBER09NUMBER09NUMBER09DECIMAL
DECIMAL -> .NUMBER09 | .NUMBER09NUMBER09 | lambda
NUMBER14 -> 1 | 2 | 3 | 4

FUNC -> FUNCTION(NAME)JUMPENDFUNC(NAME)JUMPCALL(NAME)

}

VT = {_, a, b, ..., z, A, B, ..., Z, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, #,
        VOLUME, NOTE, DURATION, STREAM, FREQUENCY, FUNCTION, ENDFUNCTION, CALL}
VN = {S, NAME, LETTER1, LETTER2, VOLUME_VALUE, NUMBER01, NOTE_VALUE, REGULAR_NOTE_VALUE, IRREGULAR_NOTE_VALUE, DURATION_VALUE, NUMBERDURATION, NUMBER, NUMBER09, FREQUENCY_VALUE, DECIMAL, NUMBER14, JUMP}

G = (VT, VN, P, S)

